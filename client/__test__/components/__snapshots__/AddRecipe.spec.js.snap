// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add recipe form suit Should render add recipe page component without exploding 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddRecipeForm
    addRecipeAction={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "description": "this is it",
              "direction": "rice and beans",
              "imageSrc": "image/img.jpg",
              "imageUrl": "image/img.jpg",
              "ingredients": "rice and beans",
              "title": "rice and beans",
              "undefined": undefined,
            },
            Object {
              "toast": [MockFunction],
            },
            Object {},
          ],
        ],
      }
    }
    error={Object {}}
    history={Object {}}
    loggedIn={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h4
          className="top-margin-40"
        >
          Add Recipe
        </h4>,
        <hr />,
        <div
          className="col s12 m4 l4 "
        >
          <div
            className="input-field col s12"
          >
            <input
              id="title"
              name="title"
              onChange={[Function]}
              type="text"
              value="rice and beans"
            />
            <label
              htmlFor="title"
            >
              Name of Recipe
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <input
              id="description"
              name="description"
              onChange={[Function]}
              type="text"
              value="this is it"
            />
            <label
              htmlFor="description"
            >
              Description
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <textarea
              className="materialize-textarea"
              id="ingredients"
              name="ingredients"
              onChange={[Function]}
              value="rice and beans"
            />
            <label
              htmlFor="ingredients"
            >
              Ingredients
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <textarea
              className="materialize-textarea"
              id="direction"
              name="direction"
              onChange={[Function]}
              value="rice and beans"
            />
            <label
              htmlFor="direction"
            >
              Direction
            </label>
          </div>
          <div
            className="file-field input-field col s12"
          >
            <div
              className="btn color-dark-gray"
            >
              <span>
                Image
              </span>
              <input
                id="img"
                multiple={true}
                name="imageUrl"
                onChange={[Function]}
                type="file"
              />
            </div>
            <div
              className="file-path-wrapper"
            >
              <input
                className="file-path validate"
                name=""
                placeholder="Select Recipe Image"
                type="text"
              />
              <input
                name="action"
                type="hidden"
              />
            </div>
          </div>
          <br />
          <br />
          <div
            className="input-field col s12"
          >
            <Link
              className="waves-effect waves-light btn"
              id="formBtn"
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "marginRight": "15px",
                }
              }
              to="!#"
            >
              Add Recipe
            </Link>
            
            <br />
            <br />
          </div>
        </div>,
        <div
          className="col s12 m4 l4"
        >
          <div
            className="img2 top-margin-40"
          >
            <img
              alt="."
              id="img3"
              src="image/img.jpg"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />
          </div>
        </div>,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add Recipe",
          "className": "top-margin-40",
        },
        "ref": null,
        "rendered": "Add Recipe",
        "type": "h4",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="input-field col s12"
            >
              <input
                id="title"
                name="title"
                onChange={[Function]}
                type="text"
                value="rice and beans"
              />
              <label
                htmlFor="title"
              >
                Name of Recipe
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <input
                id="description"
                name="description"
                onChange={[Function]}
                type="text"
                value="this is it"
              />
              <label
                htmlFor="description"
              >
                Description
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="ingredients"
                name="ingredients"
                onChange={[Function]}
                value="rice and beans"
              />
              <label
                htmlFor="ingredients"
              >
                Ingredients
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="direction"
                name="direction"
                onChange={[Function]}
                value="rice and beans"
              />
              <label
                htmlFor="direction"
              >
                Direction
              </label>
            </div>,
            <div
              className="file-field input-field col s12"
            >
              <div
                className="btn color-dark-gray"
              >
                <span>
                  Image
                </span>
                <input
                  id="img"
                  multiple={true}
                  name="imageUrl"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <div
                className="file-path-wrapper"
              >
                <input
                  className="file-path validate"
                  name=""
                  placeholder="Select Recipe Image"
                  type="text"
                />
                <input
                  name="action"
                  type="hidden"
                />
              </div>
            </div>,
            <br />,
            <br />,
            <div
              className="input-field col s12"
            >
              <Link
                className="waves-effect waves-light btn"
                id="formBtn"
                onClick={[Function]}
                replace={false}
                style={
                  Object {
                    "marginRight": "15px",
                  }
                }
                to="!#"
              >
                Add Recipe
              </Link>
              
              <br />
              <br />
            </div>,
          ],
          "className": "col s12 m4 l4 ",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value="rice and beans"
                />,
                <label
                  htmlFor="title"
                >
                  Name of Recipe
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "title",
                  "name": "title",
                  "onChange": [Function],
                  "type": "text",
                  "value": "rice and beans",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Name of Recipe",
                  "htmlFor": "title",
                },
                "ref": null,
                "rendered": "Name of Recipe",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="description"
                  name="description"
                  onChange={[Function]}
                  type="text"
                  value="this is it"
                />,
                <label
                  htmlFor="description"
                >
                  Description
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "description",
                  "name": "description",
                  "onChange": [Function],
                  "type": "text",
                  "value": "this is it",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Description",
                  "htmlFor": "description",
                },
                "ref": null,
                "rendered": "Description",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <textarea
                  className="materialize-textarea"
                  id="ingredients"
                  name="ingredients"
                  onChange={[Function]}
                  value="rice and beans"
                />,
                <label
                  htmlFor="ingredients"
                >
                  Ingredients
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "materialize-textarea",
                  "id": "ingredients",
                  "name": "ingredients",
                  "onChange": [Function],
                  "value": "rice and beans",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Ingredients",
                  "htmlFor": "ingredients",
                },
                "ref": null,
                "rendered": "Ingredients",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <textarea
                  className="materialize-textarea"
                  id="direction"
                  name="direction"
                  onChange={[Function]}
                  value="rice and beans"
                />,
                <label
                  htmlFor="direction"
                >
                  Direction
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "materialize-textarea",
                  "id": "direction",
                  "name": "direction",
                  "onChange": [Function],
                  "value": "rice and beans",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Direction",
                  "htmlFor": "direction",
                },
                "ref": null,
                "rendered": "Direction",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="btn color-dark-gray"
                >
                  <span>
                    Image
                  </span>
                  <input
                    id="img"
                    multiple={true}
                    name="imageUrl"
                    onChange={[Function]}
                    type="file"
                  />
                </div>,
                <div
                  className="file-path-wrapper"
                >
                  <input
                    className="file-path validate"
                    name=""
                    placeholder="Select Recipe Image"
                    type="text"
                  />
                  <input
                    name="action"
                    type="hidden"
                  />
                </div>,
              ],
              "className": "file-field input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      Image
                    </span>,
                    <input
                      id="img"
                      multiple={true}
                      name="imageUrl"
                      onChange={[Function]}
                      type="file"
                    />,
                  ],
                  "className": "btn color-dark-gray",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Image",
                    },
                    "ref": null,
                    "rendered": "Image",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "img",
                      "multiple": true,
                      "name": "imageUrl",
                      "onChange": [Function],
                      "type": "file",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="file-path validate"
                      name=""
                      placeholder="Select Recipe Image"
                      type="text"
                    />,
                    <input
                      name="action"
                      type="hidden"
                    />,
                  ],
                  "className": "file-path-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "file-path validate",
                      "name": "",
                      "placeholder": "Select Recipe Image",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "action",
                      "type": "hidden",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  className="waves-effect waves-light btn"
                  id="formBtn"
                  onClick={[Function]}
                  replace={false}
                  style={
                    Object {
                      "marginRight": "15px",
                    }
                  }
                  to="!#"
                >
                  Add Recipe
                </Link>,
                "",
                <br />,
                <br />,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Add Recipe",
                  "className": "waves-effect waves-light btn",
                  "id": "formBtn",
                  "onClick": [Function],
                  "replace": false,
                  "style": Object {
                    "marginRight": "15px",
                  },
                  "to": "!#",
                },
                "ref": null,
                "rendered": "Add Recipe",
                "type": [Function],
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="img2 top-margin-40"
          >
            <img
              alt="."
              id="img3"
              src="image/img.jpg"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />
          </div>,
          "className": "col s12 m4 l4",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="."
              id="img3"
              src="image/img.jpg"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />,
            "className": "img2 top-margin-40",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": ".",
              "id": "img3",
              "src": "image/img.jpg",
              "style": Object {
                "color": "#fff",
                "height": "400px",
                "maxHeight": "300px",
                "maxWidth": "300px",
                "width": "300px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h4
            className="top-margin-40"
          >
            Add Recipe
          </h4>,
          <hr />,
          <div
            className="col s12 m4 l4 "
          >
            <div
              className="input-field col s12"
            >
              <input
                id="title"
                name="title"
                onChange={[Function]}
                type="text"
                value="rice and beans"
              />
              <label
                htmlFor="title"
              >
                Name of Recipe
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <input
                id="description"
                name="description"
                onChange={[Function]}
                type="text"
                value="this is it"
              />
              <label
                htmlFor="description"
              >
                Description
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="ingredients"
                name="ingredients"
                onChange={[Function]}
                value="rice and beans"
              />
              <label
                htmlFor="ingredients"
              >
                Ingredients
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="direction"
                name="direction"
                onChange={[Function]}
                value="rice and beans"
              />
              <label
                htmlFor="direction"
              >
                Direction
              </label>
            </div>
            <div
              className="file-field input-field col s12"
            >
              <div
                className="btn color-dark-gray"
              >
                <span>
                  Image
                </span>
                <input
                  id="img"
                  multiple={true}
                  name="imageUrl"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <div
                className="file-path-wrapper"
              >
                <input
                  className="file-path validate"
                  name=""
                  placeholder="Select Recipe Image"
                  type="text"
                />
                <input
                  name="action"
                  type="hidden"
                />
              </div>
            </div>
            <br />
            <br />
            <div
              className="input-field col s12"
            >
              <Link
                className="waves-effect waves-light btn"
                id="formBtn"
                onClick={[Function]}
                replace={false}
                style={
                  Object {
                    "marginRight": "15px",
                  }
                }
                to="!#"
              >
                Add Recipe
              </Link>
              
              <br />
              <br />
            </div>
          </div>,
          <div
            className="col s12 m4 l4"
          >
            <div
              className="img2 top-margin-40"
            >
              <img
                alt="."
                id="img3"
                src="image/img.jpg"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />
            </div>
          </div>,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add Recipe",
            "className": "top-margin-40",
          },
          "ref": null,
          "rendered": "Add Recipe",
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="input-field col s12"
              >
                <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value="rice and beans"
                />
                <label
                  htmlFor="title"
                >
                  Name of Recipe
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <input
                  id="description"
                  name="description"
                  onChange={[Function]}
                  type="text"
                  value="this is it"
                />
                <label
                  htmlFor="description"
                >
                  Description
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <textarea
                  className="materialize-textarea"
                  id="ingredients"
                  name="ingredients"
                  onChange={[Function]}
                  value="rice and beans"
                />
                <label
                  htmlFor="ingredients"
                >
                  Ingredients
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <textarea
                  className="materialize-textarea"
                  id="direction"
                  name="direction"
                  onChange={[Function]}
                  value="rice and beans"
                />
                <label
                  htmlFor="direction"
                >
                  Direction
                </label>
              </div>,
              <div
                className="file-field input-field col s12"
              >
                <div
                  className="btn color-dark-gray"
                >
                  <span>
                    Image
                  </span>
                  <input
                    id="img"
                    multiple={true}
                    name="imageUrl"
                    onChange={[Function]}
                    type="file"
                  />
                </div>
                <div
                  className="file-path-wrapper"
                >
                  <input
                    className="file-path validate"
                    name=""
                    placeholder="Select Recipe Image"
                    type="text"
                  />
                  <input
                    name="action"
                    type="hidden"
                  />
                </div>
              </div>,
              <br />,
              <br />,
              <div
                className="input-field col s12"
              >
                <Link
                  className="waves-effect waves-light btn"
                  id="formBtn"
                  onClick={[Function]}
                  replace={false}
                  style={
                    Object {
                      "marginRight": "15px",
                    }
                  }
                  to="!#"
                >
                  Add Recipe
                </Link>
                
                <br />
                <br />
              </div>,
            ],
            "className": "col s12 m4 l4 ",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="title"
                    name="title"
                    onChange={[Function]}
                    type="text"
                    value="rice and beans"
                  />,
                  <label
                    htmlFor="title"
                  >
                    Name of Recipe
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "title",
                    "name": "title",
                    "onChange": [Function],
                    "type": "text",
                    "value": "rice and beans",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Name of Recipe",
                    "htmlFor": "title",
                  },
                  "ref": null,
                  "rendered": "Name of Recipe",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="description"
                    name="description"
                    onChange={[Function]}
                    type="text"
                    value="this is it"
                  />,
                  <label
                    htmlFor="description"
                  >
                    Description
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "description",
                    "name": "description",
                    "onChange": [Function],
                    "type": "text",
                    "value": "this is it",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Description",
                    "htmlFor": "description",
                  },
                  "ref": null,
                  "rendered": "Description",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <textarea
                    className="materialize-textarea"
                    id="ingredients"
                    name="ingredients"
                    onChange={[Function]}
                    value="rice and beans"
                  />,
                  <label
                    htmlFor="ingredients"
                  >
                    Ingredients
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "materialize-textarea",
                    "id": "ingredients",
                    "name": "ingredients",
                    "onChange": [Function],
                    "value": "rice and beans",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ingredients",
                    "htmlFor": "ingredients",
                  },
                  "ref": null,
                  "rendered": "Ingredients",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <textarea
                    className="materialize-textarea"
                    id="direction"
                    name="direction"
                    onChange={[Function]}
                    value="rice and beans"
                  />,
                  <label
                    htmlFor="direction"
                  >
                    Direction
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "materialize-textarea",
                    "id": "direction",
                    "name": "direction",
                    "onChange": [Function],
                    "value": "rice and beans",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Direction",
                    "htmlFor": "direction",
                  },
                  "ref": null,
                  "rendered": "Direction",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="btn color-dark-gray"
                  >
                    <span>
                      Image
                    </span>
                    <input
                      id="img"
                      multiple={true}
                      name="imageUrl"
                      onChange={[Function]}
                      type="file"
                    />
                  </div>,
                  <div
                    className="file-path-wrapper"
                  >
                    <input
                      className="file-path validate"
                      name=""
                      placeholder="Select Recipe Image"
                      type="text"
                    />
                    <input
                      name="action"
                      type="hidden"
                    />
                  </div>,
                ],
                "className": "file-field input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span>
                        Image
                      </span>,
                      <input
                        id="img"
                        multiple={true}
                        name="imageUrl"
                        onChange={[Function]}
                        type="file"
                      />,
                    ],
                    "className": "btn color-dark-gray",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Image",
                      },
                      "ref": null,
                      "rendered": "Image",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "id": "img",
                        "multiple": true,
                        "name": "imageUrl",
                        "onChange": [Function],
                        "type": "file",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        className="file-path validate"
                        name=""
                        placeholder="Select Recipe Image"
                        type="text"
                      />,
                      <input
                        name="action"
                        type="hidden"
                      />,
                    ],
                    "className": "file-path-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "file-path validate",
                        "name": "",
                        "placeholder": "Select Recipe Image",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "name": "action",
                        "type": "hidden",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className="waves-effect waves-light btn"
                    id="formBtn"
                    onClick={[Function]}
                    replace={false}
                    style={
                      Object {
                        "marginRight": "15px",
                      }
                    }
                    to="!#"
                  >
                    Add Recipe
                  </Link>,
                  "",
                  <br />,
                  <br />,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Add Recipe",
                    "className": "waves-effect waves-light btn",
                    "id": "formBtn",
                    "onClick": [Function],
                    "replace": false,
                    "style": Object {
                      "marginRight": "15px",
                    },
                    "to": "!#",
                  },
                  "ref": null,
                  "rendered": "Add Recipe",
                  "type": [Function],
                },
                "",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="img2 top-margin-40"
            >
              <img
                alt="."
                id="img3"
                src="image/img.jpg"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />
            </div>,
            "className": "col s12 m4 l4",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="."
                id="img3"
                src="image/img.jpg"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />,
              "className": "img2 top-margin-40",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": ".",
                "id": "img3",
                "src": "image/img.jpg",
                "style": Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Add recipe form suit Should render add recipe page component without exploding 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddRecipeForm
    addRecipeAction={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "description": "this is it",
              "direction": "rice and beans",
              "imageSrc": "image/img.jpg",
              "imageUrl": "image/img.jpg",
              "ingredients": "rice and beans",
              "title": "rice and beans",
              "undefined": undefined,
            },
            Object {
              "toast": [MockFunction],
            },
            Object {},
          ],
        ],
      }
    }
    error={Object {}}
    history={Object {}}
    loggedIn={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h4
          className="top-margin-40"
        >
          Add Recipe
        </h4>,
        <hr />,
        <div
          className="col s12 m4 l4 "
        >
          <div
            className="input-field col s12"
          >
            <input
              id="title"
              name="title"
              onChange={[Function]}
              type="text"
              value="rice and beans"
            />
            <label
              htmlFor="title"
            >
              Name of Recipe
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <input
              id="description"
              name="description"
              onChange={[Function]}
              type="text"
              value="this is it"
            />
            <label
              htmlFor="description"
            >
              Description
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <textarea
              className="materialize-textarea"
              id="ingredients"
              name="ingredients"
              onChange={[Function]}
              value="rice and beans"
            />
            <label
              htmlFor="ingredients"
            >
              Ingredients
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <textarea
              className="materialize-textarea"
              id="direction"
              name="direction"
              onChange={[Function]}
              value="rice and beans"
            />
            <label
              htmlFor="direction"
            >
              Direction
            </label>
          </div>
          <div
            className="file-field input-field col s12"
          >
            <div
              className="btn color-dark-gray"
            >
              <span>
                Image
              </span>
              <input
                id="img"
                multiple={true}
                name="imageUrl"
                onChange={[Function]}
                type="file"
              />
            </div>
            <div
              className="file-path-wrapper"
            >
              <input
                className="file-path validate"
                name=""
                placeholder="Select Recipe Image"
                type="text"
              />
              <input
                name="action"
                type="hidden"
              />
            </div>
          </div>
          <br />
          <br />
          <div
            className="input-field col s12"
          >
            <Link
              className="waves-effect waves-light btn"
              id="formBtn"
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "marginRight": "15px",
                }
              }
              to="!#"
            >
              Add Recipe
            </Link>
            
            <br />
            <br />
          </div>
        </div>,
        <div
          className="col s12 m4 l4"
        >
          <div
            className="img2 top-margin-40"
          >
            <img
              alt="."
              id="img3"
              src="image/img.jpg"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />
          </div>
        </div>,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add Recipe",
          "className": "top-margin-40",
        },
        "ref": null,
        "rendered": "Add Recipe",
        "type": "h4",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="input-field col s12"
            >
              <input
                id="title"
                name="title"
                onChange={[Function]}
                type="text"
                value="rice and beans"
              />
              <label
                htmlFor="title"
              >
                Name of Recipe
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <input
                id="description"
                name="description"
                onChange={[Function]}
                type="text"
                value="this is it"
              />
              <label
                htmlFor="description"
              >
                Description
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="ingredients"
                name="ingredients"
                onChange={[Function]}
                value="rice and beans"
              />
              <label
                htmlFor="ingredients"
              >
                Ingredients
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="direction"
                name="direction"
                onChange={[Function]}
                value="rice and beans"
              />
              <label
                htmlFor="direction"
              >
                Direction
              </label>
            </div>,
            <div
              className="file-field input-field col s12"
            >
              <div
                className="btn color-dark-gray"
              >
                <span>
                  Image
                </span>
                <input
                  id="img"
                  multiple={true}
                  name="imageUrl"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <div
                className="file-path-wrapper"
              >
                <input
                  className="file-path validate"
                  name=""
                  placeholder="Select Recipe Image"
                  type="text"
                />
                <input
                  name="action"
                  type="hidden"
                />
              </div>
            </div>,
            <br />,
            <br />,
            <div
              className="input-field col s12"
            >
              <Link
                className="waves-effect waves-light btn"
                id="formBtn"
                onClick={[Function]}
                replace={false}
                style={
                  Object {
                    "marginRight": "15px",
                  }
                }
                to="!#"
              >
                Add Recipe
              </Link>
              
              <br />
              <br />
            </div>,
          ],
          "className": "col s12 m4 l4 ",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value="rice and beans"
                />,
                <label
                  htmlFor="title"
                >
                  Name of Recipe
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "title",
                  "name": "title",
                  "onChange": [Function],
                  "type": "text",
                  "value": "rice and beans",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Name of Recipe",
                  "htmlFor": "title",
                },
                "ref": null,
                "rendered": "Name of Recipe",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="description"
                  name="description"
                  onChange={[Function]}
                  type="text"
                  value="this is it"
                />,
                <label
                  htmlFor="description"
                >
                  Description
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "description",
                  "name": "description",
                  "onChange": [Function],
                  "type": "text",
                  "value": "this is it",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Description",
                  "htmlFor": "description",
                },
                "ref": null,
                "rendered": "Description",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <textarea
                  className="materialize-textarea"
                  id="ingredients"
                  name="ingredients"
                  onChange={[Function]}
                  value="rice and beans"
                />,
                <label
                  htmlFor="ingredients"
                >
                  Ingredients
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "materialize-textarea",
                  "id": "ingredients",
                  "name": "ingredients",
                  "onChange": [Function],
                  "value": "rice and beans",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Ingredients",
                  "htmlFor": "ingredients",
                },
                "ref": null,
                "rendered": "Ingredients",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <textarea
                  className="materialize-textarea"
                  id="direction"
                  name="direction"
                  onChange={[Function]}
                  value="rice and beans"
                />,
                <label
                  htmlFor="direction"
                >
                  Direction
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "materialize-textarea",
                  "id": "direction",
                  "name": "direction",
                  "onChange": [Function],
                  "value": "rice and beans",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Direction",
                  "htmlFor": "direction",
                },
                "ref": null,
                "rendered": "Direction",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="btn color-dark-gray"
                >
                  <span>
                    Image
                  </span>
                  <input
                    id="img"
                    multiple={true}
                    name="imageUrl"
                    onChange={[Function]}
                    type="file"
                  />
                </div>,
                <div
                  className="file-path-wrapper"
                >
                  <input
                    className="file-path validate"
                    name=""
                    placeholder="Select Recipe Image"
                    type="text"
                  />
                  <input
                    name="action"
                    type="hidden"
                  />
                </div>,
              ],
              "className": "file-field input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      Image
                    </span>,
                    <input
                      id="img"
                      multiple={true}
                      name="imageUrl"
                      onChange={[Function]}
                      type="file"
                    />,
                  ],
                  "className": "btn color-dark-gray",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Image",
                    },
                    "ref": null,
                    "rendered": "Image",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "img",
                      "multiple": true,
                      "name": "imageUrl",
                      "onChange": [Function],
                      "type": "file",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="file-path validate"
                      name=""
                      placeholder="Select Recipe Image"
                      type="text"
                    />,
                    <input
                      name="action"
                      type="hidden"
                    />,
                  ],
                  "className": "file-path-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "file-path validate",
                      "name": "",
                      "placeholder": "Select Recipe Image",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "action",
                      "type": "hidden",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  className="waves-effect waves-light btn"
                  id="formBtn"
                  onClick={[Function]}
                  replace={false}
                  style={
                    Object {
                      "marginRight": "15px",
                    }
                  }
                  to="!#"
                >
                  Add Recipe
                </Link>,
                "",
                <br />,
                <br />,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Add Recipe",
                  "className": "waves-effect waves-light btn",
                  "id": "formBtn",
                  "onClick": [Function],
                  "replace": false,
                  "style": Object {
                    "marginRight": "15px",
                  },
                  "to": "!#",
                },
                "ref": null,
                "rendered": "Add Recipe",
                "type": [Function],
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="img2 top-margin-40"
          >
            <img
              alt="."
              id="img3"
              src="image/img.jpg"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />
          </div>,
          "className": "col s12 m4 l4",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="."
              id="img3"
              src="image/img.jpg"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />,
            "className": "img2 top-margin-40",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": ".",
              "id": "img3",
              "src": "image/img.jpg",
              "style": Object {
                "color": "#fff",
                "height": "400px",
                "maxHeight": "300px",
                "maxWidth": "300px",
                "width": "300px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h4
            className="top-margin-40"
          >
            Add Recipe
          </h4>,
          <hr />,
          <div
            className="col s12 m4 l4 "
          >
            <div
              className="input-field col s12"
            >
              <input
                id="title"
                name="title"
                onChange={[Function]}
                type="text"
                value="rice and beans"
              />
              <label
                htmlFor="title"
              >
                Name of Recipe
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <input
                id="description"
                name="description"
                onChange={[Function]}
                type="text"
                value="this is it"
              />
              <label
                htmlFor="description"
              >
                Description
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="ingredients"
                name="ingredients"
                onChange={[Function]}
                value="rice and beans"
              />
              <label
                htmlFor="ingredients"
              >
                Ingredients
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="direction"
                name="direction"
                onChange={[Function]}
                value="rice and beans"
              />
              <label
                htmlFor="direction"
              >
                Direction
              </label>
            </div>
            <div
              className="file-field input-field col s12"
            >
              <div
                className="btn color-dark-gray"
              >
                <span>
                  Image
                </span>
                <input
                  id="img"
                  multiple={true}
                  name="imageUrl"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <div
                className="file-path-wrapper"
              >
                <input
                  className="file-path validate"
                  name=""
                  placeholder="Select Recipe Image"
                  type="text"
                />
                <input
                  name="action"
                  type="hidden"
                />
              </div>
            </div>
            <br />
            <br />
            <div
              className="input-field col s12"
            >
              <Link
                className="waves-effect waves-light btn"
                id="formBtn"
                onClick={[Function]}
                replace={false}
                style={
                  Object {
                    "marginRight": "15px",
                  }
                }
                to="!#"
              >
                Add Recipe
              </Link>
              
              <br />
              <br />
            </div>
          </div>,
          <div
            className="col s12 m4 l4"
          >
            <div
              className="img2 top-margin-40"
            >
              <img
                alt="."
                id="img3"
                src="image/img.jpg"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />
            </div>
          </div>,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add Recipe",
            "className": "top-margin-40",
          },
          "ref": null,
          "rendered": "Add Recipe",
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="input-field col s12"
              >
                <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value="rice and beans"
                />
                <label
                  htmlFor="title"
                >
                  Name of Recipe
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <input
                  id="description"
                  name="description"
                  onChange={[Function]}
                  type="text"
                  value="this is it"
                />
                <label
                  htmlFor="description"
                >
                  Description
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <textarea
                  className="materialize-textarea"
                  id="ingredients"
                  name="ingredients"
                  onChange={[Function]}
                  value="rice and beans"
                />
                <label
                  htmlFor="ingredients"
                >
                  Ingredients
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <textarea
                  className="materialize-textarea"
                  id="direction"
                  name="direction"
                  onChange={[Function]}
                  value="rice and beans"
                />
                <label
                  htmlFor="direction"
                >
                  Direction
                </label>
              </div>,
              <div
                className="file-field input-field col s12"
              >
                <div
                  className="btn color-dark-gray"
                >
                  <span>
                    Image
                  </span>
                  <input
                    id="img"
                    multiple={true}
                    name="imageUrl"
                    onChange={[Function]}
                    type="file"
                  />
                </div>
                <div
                  className="file-path-wrapper"
                >
                  <input
                    className="file-path validate"
                    name=""
                    placeholder="Select Recipe Image"
                    type="text"
                  />
                  <input
                    name="action"
                    type="hidden"
                  />
                </div>
              </div>,
              <br />,
              <br />,
              <div
                className="input-field col s12"
              >
                <Link
                  className="waves-effect waves-light btn"
                  id="formBtn"
                  onClick={[Function]}
                  replace={false}
                  style={
                    Object {
                      "marginRight": "15px",
                    }
                  }
                  to="!#"
                >
                  Add Recipe
                </Link>
                
                <br />
                <br />
              </div>,
            ],
            "className": "col s12 m4 l4 ",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="title"
                    name="title"
                    onChange={[Function]}
                    type="text"
                    value="rice and beans"
                  />,
                  <label
                    htmlFor="title"
                  >
                    Name of Recipe
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "title",
                    "name": "title",
                    "onChange": [Function],
                    "type": "text",
                    "value": "rice and beans",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Name of Recipe",
                    "htmlFor": "title",
                  },
                  "ref": null,
                  "rendered": "Name of Recipe",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="description"
                    name="description"
                    onChange={[Function]}
                    type="text"
                    value="this is it"
                  />,
                  <label
                    htmlFor="description"
                  >
                    Description
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "description",
                    "name": "description",
                    "onChange": [Function],
                    "type": "text",
                    "value": "this is it",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Description",
                    "htmlFor": "description",
                  },
                  "ref": null,
                  "rendered": "Description",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <textarea
                    className="materialize-textarea"
                    id="ingredients"
                    name="ingredients"
                    onChange={[Function]}
                    value="rice and beans"
                  />,
                  <label
                    htmlFor="ingredients"
                  >
                    Ingredients
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "materialize-textarea",
                    "id": "ingredients",
                    "name": "ingredients",
                    "onChange": [Function],
                    "value": "rice and beans",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ingredients",
                    "htmlFor": "ingredients",
                  },
                  "ref": null,
                  "rendered": "Ingredients",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <textarea
                    className="materialize-textarea"
                    id="direction"
                    name="direction"
                    onChange={[Function]}
                    value="rice and beans"
                  />,
                  <label
                    htmlFor="direction"
                  >
                    Direction
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "materialize-textarea",
                    "id": "direction",
                    "name": "direction",
                    "onChange": [Function],
                    "value": "rice and beans",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Direction",
                    "htmlFor": "direction",
                  },
                  "ref": null,
                  "rendered": "Direction",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="btn color-dark-gray"
                  >
                    <span>
                      Image
                    </span>
                    <input
                      id="img"
                      multiple={true}
                      name="imageUrl"
                      onChange={[Function]}
                      type="file"
                    />
                  </div>,
                  <div
                    className="file-path-wrapper"
                  >
                    <input
                      className="file-path validate"
                      name=""
                      placeholder="Select Recipe Image"
                      type="text"
                    />
                    <input
                      name="action"
                      type="hidden"
                    />
                  </div>,
                ],
                "className": "file-field input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span>
                        Image
                      </span>,
                      <input
                        id="img"
                        multiple={true}
                        name="imageUrl"
                        onChange={[Function]}
                        type="file"
                      />,
                    ],
                    "className": "btn color-dark-gray",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Image",
                      },
                      "ref": null,
                      "rendered": "Image",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "id": "img",
                        "multiple": true,
                        "name": "imageUrl",
                        "onChange": [Function],
                        "type": "file",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        className="file-path validate"
                        name=""
                        placeholder="Select Recipe Image"
                        type="text"
                      />,
                      <input
                        name="action"
                        type="hidden"
                      />,
                    ],
                    "className": "file-path-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "file-path validate",
                        "name": "",
                        "placeholder": "Select Recipe Image",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "name": "action",
                        "type": "hidden",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className="waves-effect waves-light btn"
                    id="formBtn"
                    onClick={[Function]}
                    replace={false}
                    style={
                      Object {
                        "marginRight": "15px",
                      }
                    }
                    to="!#"
                  >
                    Add Recipe
                  </Link>,
                  "",
                  <br />,
                  <br />,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Add Recipe",
                    "className": "waves-effect waves-light btn",
                    "id": "formBtn",
                    "onClick": [Function],
                    "replace": false,
                    "style": Object {
                      "marginRight": "15px",
                    },
                    "to": "!#",
                  },
                  "ref": null,
                  "rendered": "Add Recipe",
                  "type": [Function],
                },
                "",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="img2 top-margin-40"
            >
              <img
                alt="."
                id="img3"
                src="image/img.jpg"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />
            </div>,
            "className": "col s12 m4 l4",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="."
                id="img3"
                src="image/img.jpg"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />,
              "className": "img2 top-margin-40",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": ".",
                "id": "img3",
                "src": "image/img.jpg",
                "style": Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Add recipe form suit Should render add recipe page component without exploding 3`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddRecipeForm
    addRecipeAction={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "description": "this is it",
              "direction": "rice and beans",
              "imageSrc": "image/img.jpg",
              "imageUrl": "image/img.jpg",
              "ingredients": "rice and beans",
              "title": "rice and beans",
              "undefined": undefined,
            },
            Object {
              "toast": [MockFunction] {
                "calls": Array [
                  Array [
                    "Title can't be empty!!",
                    3000,
                    "red",
                  ],
                  Array [
                    "Ingredients can't be empty!!",
                    3000,
                    "red",
                  ],
                  Array [
                    "Direction can't be empty!!",
                    3000,
                    "red",
                  ],
                  Array [
                    "Description can't be empty!!",
                    3000,
                    "red",
                  ],
                  Array [
                    "Image can't be empty!!",
                    3000,
                    "red",
                  ],
                ],
              },
            },
            Object {},
          ],
        ],
      }
    }
    error={Object {}}
    history={Object {}}
    loggedIn={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h4
          className="top-margin-40"
        >
          Add Recipe
        </h4>,
        <hr />,
        <div
          className="col s12 m4 l4 "
        >
          <div
            className="input-field col s12"
          >
            <input
              id="title"
              name="title"
              onChange={[Function]}
              type="text"
              value=""
            />
            <label
              htmlFor="title"
            >
              Name of Recipe
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <input
              id="description"
              name="description"
              onChange={[Function]}
              type="text"
              value=""
            />
            <label
              htmlFor="description"
            >
              Description
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <textarea
              className="materialize-textarea"
              id="ingredients"
              name="ingredients"
              onChange={[Function]}
              value=""
            />
            <label
              htmlFor="ingredients"
            >
              Ingredients
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <textarea
              className="materialize-textarea"
              id="direction"
              name="direction"
              onChange={[Function]}
              value=""
            />
            <label
              htmlFor="direction"
            >
              Direction
            </label>
          </div>
          <div
            className="file-field input-field col s12"
          >
            <div
              className="btn color-dark-gray"
            >
              <span>
                Image
              </span>
              <input
                id="img"
                multiple={true}
                name="imageUrl"
                onChange={[Function]}
                type="file"
              />
            </div>
            <div
              className="file-path-wrapper"
            >
              <input
                className="file-path validate"
                name=""
                placeholder="Select Recipe Image"
                type="text"
              />
              <input
                name="action"
                type="hidden"
              />
            </div>
          </div>
          <br />
          <br />
          <div
            className="input-field col s12"
          >
            <Link
              className="waves-effect waves-light btn"
              id="formBtn"
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "marginRight": "15px",
                }
              }
              to="!#"
            >
              Add Recipe
            </Link>
            
            <br />
            <br />
          </div>
        </div>,
        <div
          className="col s12 m4 l4"
        >
          <div
            className="img2 top-margin-40"
          >
            <img
              alt="."
              id="img3"
              src="test-file-stub"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />
          </div>
        </div>,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add Recipe",
          "className": "top-margin-40",
        },
        "ref": null,
        "rendered": "Add Recipe",
        "type": "h4",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="input-field col s12"
            >
              <input
                id="title"
                name="title"
                onChange={[Function]}
                type="text"
                value=""
              />
              <label
                htmlFor="title"
              >
                Name of Recipe
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <input
                id="description"
                name="description"
                onChange={[Function]}
                type="text"
                value=""
              />
              <label
                htmlFor="description"
              >
                Description
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="ingredients"
                name="ingredients"
                onChange={[Function]}
                value=""
              />
              <label
                htmlFor="ingredients"
              >
                Ingredients
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="direction"
                name="direction"
                onChange={[Function]}
                value=""
              />
              <label
                htmlFor="direction"
              >
                Direction
              </label>
            </div>,
            <div
              className="file-field input-field col s12"
            >
              <div
                className="btn color-dark-gray"
              >
                <span>
                  Image
                </span>
                <input
                  id="img"
                  multiple={true}
                  name="imageUrl"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <div
                className="file-path-wrapper"
              >
                <input
                  className="file-path validate"
                  name=""
                  placeholder="Select Recipe Image"
                  type="text"
                />
                <input
                  name="action"
                  type="hidden"
                />
              </div>
            </div>,
            <br />,
            <br />,
            <div
              className="input-field col s12"
            >
              <Link
                className="waves-effect waves-light btn"
                id="formBtn"
                onClick={[Function]}
                replace={false}
                style={
                  Object {
                    "marginRight": "15px",
                  }
                }
                to="!#"
              >
                Add Recipe
              </Link>
              
              <br />
              <br />
            </div>,
          ],
          "className": "col s12 m4 l4 ",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value=""
                />,
                <label
                  htmlFor="title"
                >
                  Name of Recipe
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "title",
                  "name": "title",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Name of Recipe",
                  "htmlFor": "title",
                },
                "ref": null,
                "rendered": "Name of Recipe",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="description"
                  name="description"
                  onChange={[Function]}
                  type="text"
                  value=""
                />,
                <label
                  htmlFor="description"
                >
                  Description
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "description",
                  "name": "description",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Description",
                  "htmlFor": "description",
                },
                "ref": null,
                "rendered": "Description",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <textarea
                  className="materialize-textarea"
                  id="ingredients"
                  name="ingredients"
                  onChange={[Function]}
                  value=""
                />,
                <label
                  htmlFor="ingredients"
                >
                  Ingredients
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "materialize-textarea",
                  "id": "ingredients",
                  "name": "ingredients",
                  "onChange": [Function],
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Ingredients",
                  "htmlFor": "ingredients",
                },
                "ref": null,
                "rendered": "Ingredients",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <textarea
                  className="materialize-textarea"
                  id="direction"
                  name="direction"
                  onChange={[Function]}
                  value=""
                />,
                <label
                  htmlFor="direction"
                >
                  Direction
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "materialize-textarea",
                  "id": "direction",
                  "name": "direction",
                  "onChange": [Function],
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Direction",
                  "htmlFor": "direction",
                },
                "ref": null,
                "rendered": "Direction",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="btn color-dark-gray"
                >
                  <span>
                    Image
                  </span>
                  <input
                    id="img"
                    multiple={true}
                    name="imageUrl"
                    onChange={[Function]}
                    type="file"
                  />
                </div>,
                <div
                  className="file-path-wrapper"
                >
                  <input
                    className="file-path validate"
                    name=""
                    placeholder="Select Recipe Image"
                    type="text"
                  />
                  <input
                    name="action"
                    type="hidden"
                  />
                </div>,
              ],
              "className": "file-field input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      Image
                    </span>,
                    <input
                      id="img"
                      multiple={true}
                      name="imageUrl"
                      onChange={[Function]}
                      type="file"
                    />,
                  ],
                  "className": "btn color-dark-gray",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Image",
                    },
                    "ref": null,
                    "rendered": "Image",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "img",
                      "multiple": true,
                      "name": "imageUrl",
                      "onChange": [Function],
                      "type": "file",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="file-path validate"
                      name=""
                      placeholder="Select Recipe Image"
                      type="text"
                    />,
                    <input
                      name="action"
                      type="hidden"
                    />,
                  ],
                  "className": "file-path-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "file-path validate",
                      "name": "",
                      "placeholder": "Select Recipe Image",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "action",
                      "type": "hidden",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  className="waves-effect waves-light btn"
                  id="formBtn"
                  onClick={[Function]}
                  replace={false}
                  style={
                    Object {
                      "marginRight": "15px",
                    }
                  }
                  to="!#"
                >
                  Add Recipe
                </Link>,
                "",
                <br />,
                <br />,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Add Recipe",
                  "className": "waves-effect waves-light btn",
                  "id": "formBtn",
                  "onClick": [Function],
                  "replace": false,
                  "style": Object {
                    "marginRight": "15px",
                  },
                  "to": "!#",
                },
                "ref": null,
                "rendered": "Add Recipe",
                "type": [Function],
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="img2 top-margin-40"
          >
            <img
              alt="."
              id="img3"
              src="test-file-stub"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />
          </div>,
          "className": "col s12 m4 l4",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="."
              id="img3"
              src="test-file-stub"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />,
            "className": "img2 top-margin-40",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": ".",
              "id": "img3",
              "src": "test-file-stub",
              "style": Object {
                "color": "#fff",
                "height": "400px",
                "maxHeight": "300px",
                "maxWidth": "300px",
                "width": "300px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h4
            className="top-margin-40"
          >
            Add Recipe
          </h4>,
          <hr />,
          <div
            className="col s12 m4 l4 "
          >
            <div
              className="input-field col s12"
            >
              <input
                id="title"
                name="title"
                onChange={[Function]}
                type="text"
                value=""
              />
              <label
                htmlFor="title"
              >
                Name of Recipe
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <input
                id="description"
                name="description"
                onChange={[Function]}
                type="text"
                value=""
              />
              <label
                htmlFor="description"
              >
                Description
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="ingredients"
                name="ingredients"
                onChange={[Function]}
                value=""
              />
              <label
                htmlFor="ingredients"
              >
                Ingredients
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="direction"
                name="direction"
                onChange={[Function]}
                value=""
              />
              <label
                htmlFor="direction"
              >
                Direction
              </label>
            </div>
            <div
              className="file-field input-field col s12"
            >
              <div
                className="btn color-dark-gray"
              >
                <span>
                  Image
                </span>
                <input
                  id="img"
                  multiple={true}
                  name="imageUrl"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <div
                className="file-path-wrapper"
              >
                <input
                  className="file-path validate"
                  name=""
                  placeholder="Select Recipe Image"
                  type="text"
                />
                <input
                  name="action"
                  type="hidden"
                />
              </div>
            </div>
            <br />
            <br />
            <div
              className="input-field col s12"
            >
              <Link
                className="waves-effect waves-light btn"
                id="formBtn"
                onClick={[Function]}
                replace={false}
                style={
                  Object {
                    "marginRight": "15px",
                  }
                }
                to="!#"
              >
                Add Recipe
              </Link>
              
              <br />
              <br />
            </div>
          </div>,
          <div
            className="col s12 m4 l4"
          >
            <div
              className="img2 top-margin-40"
            >
              <img
                alt="."
                id="img3"
                src="test-file-stub"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />
            </div>
          </div>,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add Recipe",
            "className": "top-margin-40",
          },
          "ref": null,
          "rendered": "Add Recipe",
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="input-field col s12"
              >
                <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <label
                  htmlFor="title"
                >
                  Name of Recipe
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <input
                  id="description"
                  name="description"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <label
                  htmlFor="description"
                >
                  Description
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <textarea
                  className="materialize-textarea"
                  id="ingredients"
                  name="ingredients"
                  onChange={[Function]}
                  value=""
                />
                <label
                  htmlFor="ingredients"
                >
                  Ingredients
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <textarea
                  className="materialize-textarea"
                  id="direction"
                  name="direction"
                  onChange={[Function]}
                  value=""
                />
                <label
                  htmlFor="direction"
                >
                  Direction
                </label>
              </div>,
              <div
                className="file-field input-field col s12"
              >
                <div
                  className="btn color-dark-gray"
                >
                  <span>
                    Image
                  </span>
                  <input
                    id="img"
                    multiple={true}
                    name="imageUrl"
                    onChange={[Function]}
                    type="file"
                  />
                </div>
                <div
                  className="file-path-wrapper"
                >
                  <input
                    className="file-path validate"
                    name=""
                    placeholder="Select Recipe Image"
                    type="text"
                  />
                  <input
                    name="action"
                    type="hidden"
                  />
                </div>
              </div>,
              <br />,
              <br />,
              <div
                className="input-field col s12"
              >
                <Link
                  className="waves-effect waves-light btn"
                  id="formBtn"
                  onClick={[Function]}
                  replace={false}
                  style={
                    Object {
                      "marginRight": "15px",
                    }
                  }
                  to="!#"
                >
                  Add Recipe
                </Link>
                
                <br />
                <br />
              </div>,
            ],
            "className": "col s12 m4 l4 ",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="title"
                    name="title"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />,
                  <label
                    htmlFor="title"
                  >
                    Name of Recipe
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "title",
                    "name": "title",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Name of Recipe",
                    "htmlFor": "title",
                  },
                  "ref": null,
                  "rendered": "Name of Recipe",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="description"
                    name="description"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />,
                  <label
                    htmlFor="description"
                  >
                    Description
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "description",
                    "name": "description",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Description",
                    "htmlFor": "description",
                  },
                  "ref": null,
                  "rendered": "Description",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <textarea
                    className="materialize-textarea"
                    id="ingredients"
                    name="ingredients"
                    onChange={[Function]}
                    value=""
                  />,
                  <label
                    htmlFor="ingredients"
                  >
                    Ingredients
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "materialize-textarea",
                    "id": "ingredients",
                    "name": "ingredients",
                    "onChange": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ingredients",
                    "htmlFor": "ingredients",
                  },
                  "ref": null,
                  "rendered": "Ingredients",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <textarea
                    className="materialize-textarea"
                    id="direction"
                    name="direction"
                    onChange={[Function]}
                    value=""
                  />,
                  <label
                    htmlFor="direction"
                  >
                    Direction
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "materialize-textarea",
                    "id": "direction",
                    "name": "direction",
                    "onChange": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Direction",
                    "htmlFor": "direction",
                  },
                  "ref": null,
                  "rendered": "Direction",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="btn color-dark-gray"
                  >
                    <span>
                      Image
                    </span>
                    <input
                      id="img"
                      multiple={true}
                      name="imageUrl"
                      onChange={[Function]}
                      type="file"
                    />
                  </div>,
                  <div
                    className="file-path-wrapper"
                  >
                    <input
                      className="file-path validate"
                      name=""
                      placeholder="Select Recipe Image"
                      type="text"
                    />
                    <input
                      name="action"
                      type="hidden"
                    />
                  </div>,
                ],
                "className": "file-field input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span>
                        Image
                      </span>,
                      <input
                        id="img"
                        multiple={true}
                        name="imageUrl"
                        onChange={[Function]}
                        type="file"
                      />,
                    ],
                    "className": "btn color-dark-gray",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Image",
                      },
                      "ref": null,
                      "rendered": "Image",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "id": "img",
                        "multiple": true,
                        "name": "imageUrl",
                        "onChange": [Function],
                        "type": "file",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        className="file-path validate"
                        name=""
                        placeholder="Select Recipe Image"
                        type="text"
                      />,
                      <input
                        name="action"
                        type="hidden"
                      />,
                    ],
                    "className": "file-path-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "file-path validate",
                        "name": "",
                        "placeholder": "Select Recipe Image",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "name": "action",
                        "type": "hidden",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className="waves-effect waves-light btn"
                    id="formBtn"
                    onClick={[Function]}
                    replace={false}
                    style={
                      Object {
                        "marginRight": "15px",
                      }
                    }
                    to="!#"
                  >
                    Add Recipe
                  </Link>,
                  "",
                  <br />,
                  <br />,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Add Recipe",
                    "className": "waves-effect waves-light btn",
                    "id": "formBtn",
                    "onClick": [Function],
                    "replace": false,
                    "style": Object {
                      "marginRight": "15px",
                    },
                    "to": "!#",
                  },
                  "ref": null,
                  "rendered": "Add Recipe",
                  "type": [Function],
                },
                "",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="img2 top-margin-40"
            >
              <img
                alt="."
                id="img3"
                src="test-file-stub"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />
            </div>,
            "className": "col s12 m4 l4",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="."
                id="img3"
                src="test-file-stub"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />,
              "className": "img2 top-margin-40",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": ".",
                "id": "img3",
                "src": "test-file-stub",
                "style": Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Add recipe form suit Should render add recipe page component without exploding 4`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddRecipeForm
    addRecipeAction={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "description": "this is it",
              "direction": "rice and beans",
              "imageSrc": "image/img.jpg",
              "imageUrl": "image/img.jpg",
              "ingredients": "rice and beans",
              "title": "rice and beans",
              "undefined": undefined,
            },
            Object {
              "toast": [MockFunction] {
                "calls": Array [
                  Array [
                    "Title can't be empty!!",
                    3000,
                    "red",
                  ],
                  Array [
                    "Ingredients can't be empty!!",
                    3000,
                    "red",
                  ],
                  Array [
                    "Direction can't be empty!!",
                    3000,
                    "red",
                  ],
                  Array [
                    "Description can't be empty!!",
                    3000,
                    "red",
                  ],
                  Array [
                    "Image can't be empty!!",
                    3000,
                    "red",
                  ],
                ],
              },
            },
            Object {},
          ],
        ],
      }
    }
    error={Object {}}
    history={Object {}}
    loggedIn={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h4
          className="top-margin-40"
        >
          Add Recipe
        </h4>,
        <hr />,
        <div
          className="col s12 m4 l4 "
        >
          <div
            className="input-field col s12"
          >
            <input
              id="title"
              name="title"
              onChange={[Function]}
              type="text"
              value=""
            />
            <label
              htmlFor="title"
            >
              Name of Recipe
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <input
              id="description"
              name="description"
              onChange={[Function]}
              type="text"
              value=""
            />
            <label
              htmlFor="description"
            >
              Description
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <textarea
              className="materialize-textarea"
              id="ingredients"
              name="ingredients"
              onChange={[Function]}
              value=""
            />
            <label
              htmlFor="ingredients"
            >
              Ingredients
            </label>
          </div>
          <div
            className="input-field col s12"
          >
            <textarea
              className="materialize-textarea"
              id="direction"
              name="direction"
              onChange={[Function]}
              value=""
            />
            <label
              htmlFor="direction"
            >
              Direction
            </label>
          </div>
          <div
            className="file-field input-field col s12"
          >
            <div
              className="btn color-dark-gray"
            >
              <span>
                Image
              </span>
              <input
                id="img"
                multiple={true}
                name="imageUrl"
                onChange={[Function]}
                type="file"
              />
            </div>
            <div
              className="file-path-wrapper"
            >
              <input
                className="file-path validate"
                name=""
                placeholder="Select Recipe Image"
                type="text"
              />
              <input
                name="action"
                type="hidden"
              />
            </div>
          </div>
          <br />
          <br />
          <div
            className="input-field col s12"
          >
            <Link
              className="waves-effect waves-light btn"
              id="formBtn"
              onClick={[Function]}
              replace={false}
              style={
                Object {
                  "marginRight": "15px",
                }
              }
              to="!#"
            >
              Add Recipe
            </Link>
            
            <br />
            <br />
          </div>
        </div>,
        <div
          className="col s12 m4 l4"
        >
          <div
            className="img2 top-margin-40"
          >
            <img
              alt="."
              id="img3"
              src="test-file-stub"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />
          </div>
        </div>,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add Recipe",
          "className": "top-margin-40",
        },
        "ref": null,
        "rendered": "Add Recipe",
        "type": "h4",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="input-field col s12"
            >
              <input
                id="title"
                name="title"
                onChange={[Function]}
                type="text"
                value=""
              />
              <label
                htmlFor="title"
              >
                Name of Recipe
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <input
                id="description"
                name="description"
                onChange={[Function]}
                type="text"
                value=""
              />
              <label
                htmlFor="description"
              >
                Description
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="ingredients"
                name="ingredients"
                onChange={[Function]}
                value=""
              />
              <label
                htmlFor="ingredients"
              >
                Ingredients
              </label>
            </div>,
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="direction"
                name="direction"
                onChange={[Function]}
                value=""
              />
              <label
                htmlFor="direction"
              >
                Direction
              </label>
            </div>,
            <div
              className="file-field input-field col s12"
            >
              <div
                className="btn color-dark-gray"
              >
                <span>
                  Image
                </span>
                <input
                  id="img"
                  multiple={true}
                  name="imageUrl"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <div
                className="file-path-wrapper"
              >
                <input
                  className="file-path validate"
                  name=""
                  placeholder="Select Recipe Image"
                  type="text"
                />
                <input
                  name="action"
                  type="hidden"
                />
              </div>
            </div>,
            <br />,
            <br />,
            <div
              className="input-field col s12"
            >
              <Link
                className="waves-effect waves-light btn"
                id="formBtn"
                onClick={[Function]}
                replace={false}
                style={
                  Object {
                    "marginRight": "15px",
                  }
                }
                to="!#"
              >
                Add Recipe
              </Link>
              
              <br />
              <br />
            </div>,
          ],
          "className": "col s12 m4 l4 ",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value=""
                />,
                <label
                  htmlFor="title"
                >
                  Name of Recipe
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "title",
                  "name": "title",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Name of Recipe",
                  "htmlFor": "title",
                },
                "ref": null,
                "rendered": "Name of Recipe",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="description"
                  name="description"
                  onChange={[Function]}
                  type="text"
                  value=""
                />,
                <label
                  htmlFor="description"
                >
                  Description
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "description",
                  "name": "description",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Description",
                  "htmlFor": "description",
                },
                "ref": null,
                "rendered": "Description",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <textarea
                  className="materialize-textarea"
                  id="ingredients"
                  name="ingredients"
                  onChange={[Function]}
                  value=""
                />,
                <label
                  htmlFor="ingredients"
                >
                  Ingredients
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "materialize-textarea",
                  "id": "ingredients",
                  "name": "ingredients",
                  "onChange": [Function],
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Ingredients",
                  "htmlFor": "ingredients",
                },
                "ref": null,
                "rendered": "Ingredients",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <textarea
                  className="materialize-textarea"
                  id="direction"
                  name="direction"
                  onChange={[Function]}
                  value=""
                />,
                <label
                  htmlFor="direction"
                >
                  Direction
                </label>,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "materialize-textarea",
                  "id": "direction",
                  "name": "direction",
                  "onChange": [Function],
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Direction",
                  "htmlFor": "direction",
                },
                "ref": null,
                "rendered": "Direction",
                "type": "label",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="btn color-dark-gray"
                >
                  <span>
                    Image
                  </span>
                  <input
                    id="img"
                    multiple={true}
                    name="imageUrl"
                    onChange={[Function]}
                    type="file"
                  />
                </div>,
                <div
                  className="file-path-wrapper"
                >
                  <input
                    className="file-path validate"
                    name=""
                    placeholder="Select Recipe Image"
                    type="text"
                  />
                  <input
                    name="action"
                    type="hidden"
                  />
                </div>,
              ],
              "className": "file-field input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      Image
                    </span>,
                    <input
                      id="img"
                      multiple={true}
                      name="imageUrl"
                      onChange={[Function]}
                      type="file"
                    />,
                  ],
                  "className": "btn color-dark-gray",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Image",
                    },
                    "ref": null,
                    "rendered": "Image",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "img",
                      "multiple": true,
                      "name": "imageUrl",
                      "onChange": [Function],
                      "type": "file",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="file-path validate"
                      name=""
                      placeholder="Select Recipe Image"
                      type="text"
                    />,
                    <input
                      name="action"
                      type="hidden"
                    />,
                  ],
                  "className": "file-path-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "file-path validate",
                      "name": "",
                      "placeholder": "Select Recipe Image",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "action",
                      "type": "hidden",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  className="waves-effect waves-light btn"
                  id="formBtn"
                  onClick={[Function]}
                  replace={false}
                  style={
                    Object {
                      "marginRight": "15px",
                    }
                  }
                  to="!#"
                >
                  Add Recipe
                </Link>,
                "",
                <br />,
                <br />,
              ],
              "className": "input-field col s12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Add Recipe",
                  "className": "waves-effect waves-light btn",
                  "id": "formBtn",
                  "onClick": [Function],
                  "replace": false,
                  "style": Object {
                    "marginRight": "15px",
                  },
                  "to": "!#",
                },
                "ref": null,
                "rendered": "Add Recipe",
                "type": [Function],
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="img2 top-margin-40"
          >
            <img
              alt="."
              id="img3"
              src="test-file-stub"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />
          </div>,
          "className": "col s12 m4 l4",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="."
              id="img3"
              src="test-file-stub"
              style={
                Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                }
              }
            />,
            "className": "img2 top-margin-40",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": ".",
              "id": "img3",
              "src": "test-file-stub",
              "style": Object {
                "color": "#fff",
                "height": "400px",
                "maxHeight": "300px",
                "maxWidth": "300px",
                "width": "300px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h4
            className="top-margin-40"
          >
            Add Recipe
          </h4>,
          <hr />,
          <div
            className="col s12 m4 l4 "
          >
            <div
              className="input-field col s12"
            >
              <input
                id="title"
                name="title"
                onChange={[Function]}
                type="text"
                value=""
              />
              <label
                htmlFor="title"
              >
                Name of Recipe
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <input
                id="description"
                name="description"
                onChange={[Function]}
                type="text"
                value=""
              />
              <label
                htmlFor="description"
              >
                Description
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="ingredients"
                name="ingredients"
                onChange={[Function]}
                value=""
              />
              <label
                htmlFor="ingredients"
              >
                Ingredients
              </label>
            </div>
            <div
              className="input-field col s12"
            >
              <textarea
                className="materialize-textarea"
                id="direction"
                name="direction"
                onChange={[Function]}
                value=""
              />
              <label
                htmlFor="direction"
              >
                Direction
              </label>
            </div>
            <div
              className="file-field input-field col s12"
            >
              <div
                className="btn color-dark-gray"
              >
                <span>
                  Image
                </span>
                <input
                  id="img"
                  multiple={true}
                  name="imageUrl"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <div
                className="file-path-wrapper"
              >
                <input
                  className="file-path validate"
                  name=""
                  placeholder="Select Recipe Image"
                  type="text"
                />
                <input
                  name="action"
                  type="hidden"
                />
              </div>
            </div>
            <br />
            <br />
            <div
              className="input-field col s12"
            >
              <Link
                className="waves-effect waves-light btn"
                id="formBtn"
                onClick={[Function]}
                replace={false}
                style={
                  Object {
                    "marginRight": "15px",
                  }
                }
                to="!#"
              >
                Add Recipe
              </Link>
              
              <br />
              <br />
            </div>
          </div>,
          <div
            className="col s12 m4 l4"
          >
            <div
              className="img2 top-margin-40"
            >
              <img
                alt="."
                id="img3"
                src="test-file-stub"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />
            </div>
          </div>,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add Recipe",
            "className": "top-margin-40",
          },
          "ref": null,
          "rendered": "Add Recipe",
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="input-field col s12"
              >
                <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <label
                  htmlFor="title"
                >
                  Name of Recipe
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <input
                  id="description"
                  name="description"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <label
                  htmlFor="description"
                >
                  Description
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <textarea
                  className="materialize-textarea"
                  id="ingredients"
                  name="ingredients"
                  onChange={[Function]}
                  value=""
                />
                <label
                  htmlFor="ingredients"
                >
                  Ingredients
                </label>
              </div>,
              <div
                className="input-field col s12"
              >
                <textarea
                  className="materialize-textarea"
                  id="direction"
                  name="direction"
                  onChange={[Function]}
                  value=""
                />
                <label
                  htmlFor="direction"
                >
                  Direction
                </label>
              </div>,
              <div
                className="file-field input-field col s12"
              >
                <div
                  className="btn color-dark-gray"
                >
                  <span>
                    Image
                  </span>
                  <input
                    id="img"
                    multiple={true}
                    name="imageUrl"
                    onChange={[Function]}
                    type="file"
                  />
                </div>
                <div
                  className="file-path-wrapper"
                >
                  <input
                    className="file-path validate"
                    name=""
                    placeholder="Select Recipe Image"
                    type="text"
                  />
                  <input
                    name="action"
                    type="hidden"
                  />
                </div>
              </div>,
              <br />,
              <br />,
              <div
                className="input-field col s12"
              >
                <Link
                  className="waves-effect waves-light btn"
                  id="formBtn"
                  onClick={[Function]}
                  replace={false}
                  style={
                    Object {
                      "marginRight": "15px",
                    }
                  }
                  to="!#"
                >
                  Add Recipe
                </Link>
                
                <br />
                <br />
              </div>,
            ],
            "className": "col s12 m4 l4 ",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="title"
                    name="title"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />,
                  <label
                    htmlFor="title"
                  >
                    Name of Recipe
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "title",
                    "name": "title",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Name of Recipe",
                    "htmlFor": "title",
                  },
                  "ref": null,
                  "rendered": "Name of Recipe",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="description"
                    name="description"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />,
                  <label
                    htmlFor="description"
                  >
                    Description
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "description",
                    "name": "description",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Description",
                    "htmlFor": "description",
                  },
                  "ref": null,
                  "rendered": "Description",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <textarea
                    className="materialize-textarea"
                    id="ingredients"
                    name="ingredients"
                    onChange={[Function]}
                    value=""
                  />,
                  <label
                    htmlFor="ingredients"
                  >
                    Ingredients
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "materialize-textarea",
                    "id": "ingredients",
                    "name": "ingredients",
                    "onChange": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ingredients",
                    "htmlFor": "ingredients",
                  },
                  "ref": null,
                  "rendered": "Ingredients",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <textarea
                    className="materialize-textarea"
                    id="direction"
                    name="direction"
                    onChange={[Function]}
                    value=""
                  />,
                  <label
                    htmlFor="direction"
                  >
                    Direction
                  </label>,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "materialize-textarea",
                    "id": "direction",
                    "name": "direction",
                    "onChange": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Direction",
                    "htmlFor": "direction",
                  },
                  "ref": null,
                  "rendered": "Direction",
                  "type": "label",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="btn color-dark-gray"
                  >
                    <span>
                      Image
                    </span>
                    <input
                      id="img"
                      multiple={true}
                      name="imageUrl"
                      onChange={[Function]}
                      type="file"
                    />
                  </div>,
                  <div
                    className="file-path-wrapper"
                  >
                    <input
                      className="file-path validate"
                      name=""
                      placeholder="Select Recipe Image"
                      type="text"
                    />
                    <input
                      name="action"
                      type="hidden"
                    />
                  </div>,
                ],
                "className": "file-field input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span>
                        Image
                      </span>,
                      <input
                        id="img"
                        multiple={true}
                        name="imageUrl"
                        onChange={[Function]}
                        type="file"
                      />,
                    ],
                    "className": "btn color-dark-gray",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Image",
                      },
                      "ref": null,
                      "rendered": "Image",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "id": "img",
                        "multiple": true,
                        "name": "imageUrl",
                        "onChange": [Function],
                        "type": "file",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        className="file-path validate"
                        name=""
                        placeholder="Select Recipe Image"
                        type="text"
                      />,
                      <input
                        name="action"
                        type="hidden"
                      />,
                    ],
                    "className": "file-path-wrapper",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "file-path validate",
                        "name": "",
                        "placeholder": "Select Recipe Image",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "name": "action",
                        "type": "hidden",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className="waves-effect waves-light btn"
                    id="formBtn"
                    onClick={[Function]}
                    replace={false}
                    style={
                      Object {
                        "marginRight": "15px",
                      }
                    }
                    to="!#"
                  >
                    Add Recipe
                  </Link>,
                  "",
                  <br />,
                  <br />,
                ],
                "className": "input-field col s12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Add Recipe",
                    "className": "waves-effect waves-light btn",
                    "id": "formBtn",
                    "onClick": [Function],
                    "replace": false,
                    "style": Object {
                      "marginRight": "15px",
                    },
                    "to": "!#",
                  },
                  "ref": null,
                  "rendered": "Add Recipe",
                  "type": [Function],
                },
                "",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="img2 top-margin-40"
            >
              <img
                alt="."
                id="img3"
                src="test-file-stub"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />
            </div>,
            "className": "col s12 m4 l4",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="."
                id="img3"
                src="test-file-stub"
                style={
                  Object {
                    "color": "#fff",
                    "height": "400px",
                    "maxHeight": "300px",
                    "maxWidth": "300px",
                    "width": "300px",
                  }
                }
              />,
              "className": "img2 top-margin-40",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": ".",
                "id": "img3",
                "src": "test-file-stub",
                "style": Object {
                  "color": "#fff",
                  "height": "400px",
                  "maxHeight": "300px",
                  "maxWidth": "300px",
                  "width": "300px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Add recipe page suit Should render add recipe page component without exploding 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddRecipePage
    addRecipeAction={[MockFunction]}
    error={Object {}}
    history={Object {}}
    loggedIn={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Header)
          addRecipeAction={[MockFunction]}
          error={Object {}}
          history={Object {}}
          loggedIn={true}
        />,
        <div
          className="container cont"
        >
          <Connect(AddRecipeForm)
            addRecipeAction={[MockFunction]}
            error={Object {}}
            history={Object {}}
            loggedIn={true}
          />
        </div>,
        <Footer />,
      ],
      "className": "main",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "addRecipeAction": [MockFunction],
          "error": Object {},
          "history": Object {},
          "loggedIn": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Connect(AddRecipeForm)
            addRecipeAction={[MockFunction]}
            error={Object {}}
            history={Object {}}
            loggedIn={true}
          />,
          "className": "container cont",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addRecipeAction": [MockFunction],
            "error": Object {},
            "history": Object {},
            "loggedIn": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Header)
            addRecipeAction={[MockFunction]}
            error={Object {}}
            history={Object {}}
            loggedIn={true}
          />,
          <div
            className="container cont"
          >
            <Connect(AddRecipeForm)
              addRecipeAction={[MockFunction]}
              error={Object {}}
              history={Object {}}
              loggedIn={true}
            />
          </div>,
          <Footer />,
        ],
        "className": "main",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addRecipeAction": [MockFunction],
            "error": Object {},
            "history": Object {},
            "loggedIn": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Connect(AddRecipeForm)
              addRecipeAction={[MockFunction]}
              error={Object {}}
              history={Object {}}
              loggedIn={true}
            />,
            "className": "container cont",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "addRecipeAction": [MockFunction],
              "error": Object {},
              "history": Object {},
              "loggedIn": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

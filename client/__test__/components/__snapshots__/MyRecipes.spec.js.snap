// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Routes should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MyRecipesPage
    deleteRecipe={[MockFunction]}
    getMyRecipes={[MockFunction]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    user={
      Object {
        "userId": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Header)
          deleteRecipe={[MockFunction]}
          getMyRecipes={[MockFunction]}
          store={
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            }
          }
          user={
            Object {
              "userId": 1,
            }
          }
        />,
        <div
          className="container cont"
        >
          <div
            className="col s12 m12 l12"
          >
            <div
              className="row"
            >
              <div
                className="col s12 m9 l9"
              >
                <h3
                  className="h-title"
                >
                  My Recipes
                </h3>
              </div>
              <div
                className="col s12 m3 l3 top-margin-50"
              >
                <Link
                  className="waves-effect waves-light btn top-margin"
                  replace={false}
                  to="/addrecipe"
                >
                  Add Recipe
                </Link>
              </div>
            </div>
            <hr
              style={
                Object {
                  "borderTop": "1px solid #26a69a",
                }
              }
            />
            <Connect(MyRecipesList) />
          </div>
        </div>,
        <Connect(Pagination) />,
        <Footer />,
      ],
      "className": "main",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "deleteRecipe": [MockFunction],
          "getMyRecipes": [MockFunction],
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "user": Object {
            "userId": 1,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col s12 m12 l12"
          >
            <div
              className="row"
            >
              <div
                className="col s12 m9 l9"
              >
                <h3
                  className="h-title"
                >
                  My Recipes
                </h3>
              </div>
              <div
                className="col s12 m3 l3 top-margin-50"
              >
                <Link
                  className="waves-effect waves-light btn top-margin"
                  replace={false}
                  to="/addrecipe"
                >
                  Add Recipe
                </Link>
              </div>
            </div>
            <hr
              style={
                Object {
                  "borderTop": "1px solid #26a69a",
                }
              }
            />
            <Connect(MyRecipesList) />
          </div>,
          "className": "container cont",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="col s12 m9 l9"
                >
                  <h3
                    className="h-title"
                  >
                    My Recipes
                  </h3>
                </div>
                <div
                  className="col s12 m3 l3 top-margin-50"
                >
                  <Link
                    className="waves-effect waves-light btn top-margin"
                    replace={false}
                    to="/addrecipe"
                  >
                    Add Recipe
                  </Link>
                </div>
              </div>,
              <hr
                style={
                  Object {
                    "borderTop": "1px solid #26a69a",
                  }
                }
              />,
              <Connect(MyRecipesList) />,
            ],
            "className": "col s12 m12 l12",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col s12 m9 l9"
                  >
                    <h3
                      className="h-title"
                    >
                      My Recipes
                    </h3>
                  </div>,
                  <div
                    className="col s12 m3 l3 top-margin-50"
                  >
                    <Link
                      className="waves-effect waves-light btn top-margin"
                      replace={false}
                      to="/addrecipe"
                    >
                      Add Recipe
                    </Link>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <h3
                      className="h-title"
                    >
                      My Recipes
                    </h3>,
                    "className": "col s12 m9 l9",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "My Recipes",
                      "className": "h-title",
                    },
                    "ref": null,
                    "rendered": "My Recipes",
                    "type": "h3",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Link
                      className="waves-effect waves-light btn top-margin"
                      replace={false}
                      to="/addrecipe"
                    >
                      Add Recipe
                    </Link>,
                    "className": "col s12 m3 l3 top-margin-50",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Add Recipe",
                      "className": "waves-effect waves-light btn top-margin",
                      "replace": false,
                      "to": "/addrecipe",
                    },
                    "ref": null,
                    "rendered": "Add Recipe",
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "style": Object {
                  "borderTop": "1px solid #26a69a",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "hr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Header)
            deleteRecipe={[MockFunction]}
            getMyRecipes={[MockFunction]}
            store={
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              }
            }
            user={
              Object {
                "userId": 1,
              }
            }
          />,
          <div
            className="container cont"
          >
            <div
              className="col s12 m12 l12"
            >
              <div
                className="row"
              >
                <div
                  className="col s12 m9 l9"
                >
                  <h3
                    className="h-title"
                  >
                    My Recipes
                  </h3>
                </div>
                <div
                  className="col s12 m3 l3 top-margin-50"
                >
                  <Link
                    className="waves-effect waves-light btn top-margin"
                    replace={false}
                    to="/addrecipe"
                  >
                    Add Recipe
                  </Link>
                </div>
              </div>
              <hr
                style={
                  Object {
                    "borderTop": "1px solid #26a69a",
                  }
                }
              />
              <Connect(MyRecipesList) />
            </div>
          </div>,
          <Connect(Pagination) />,
          <Footer />,
        ],
        "className": "main",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "deleteRecipe": [MockFunction],
            "getMyRecipes": [MockFunction],
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "user": Object {
              "userId": 1,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col s12 m12 l12"
            >
              <div
                className="row"
              >
                <div
                  className="col s12 m9 l9"
                >
                  <h3
                    className="h-title"
                  >
                    My Recipes
                  </h3>
                </div>
                <div
                  className="col s12 m3 l3 top-margin-50"
                >
                  <Link
                    className="waves-effect waves-light btn top-margin"
                    replace={false}
                    to="/addrecipe"
                  >
                    Add Recipe
                  </Link>
                </div>
              </div>
              <hr
                style={
                  Object {
                    "borderTop": "1px solid #26a69a",
                  }
                }
              />
              <Connect(MyRecipesList) />
            </div>,
            "className": "container cont",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="row"
                >
                  <div
                    className="col s12 m9 l9"
                  >
                    <h3
                      className="h-title"
                    >
                      My Recipes
                    </h3>
                  </div>
                  <div
                    className="col s12 m3 l3 top-margin-50"
                  >
                    <Link
                      className="waves-effect waves-light btn top-margin"
                      replace={false}
                      to="/addrecipe"
                    >
                      Add Recipe
                    </Link>
                  </div>
                </div>,
                <hr
                  style={
                    Object {
                      "borderTop": "1px solid #26a69a",
                    }
                  }
                />,
                <Connect(MyRecipesList) />,
              ],
              "className": "col s12 m12 l12",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col s12 m9 l9"
                    >
                      <h3
                        className="h-title"
                      >
                        My Recipes
                      </h3>
                    </div>,
                    <div
                      className="col s12 m3 l3 top-margin-50"
                    >
                      <Link
                        className="waves-effect waves-light btn top-margin"
                        replace={false}
                        to="/addrecipe"
                      >
                        Add Recipe
                      </Link>
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <h3
                        className="h-title"
                      >
                        My Recipes
                      </h3>,
                      "className": "col s12 m9 l9",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "My Recipes",
                        "className": "h-title",
                      },
                      "ref": null,
                      "rendered": "My Recipes",
                      "type": "h3",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        className="waves-effect waves-light btn top-margin"
                        replace={false}
                        to="/addrecipe"
                      >
                        Add Recipe
                      </Link>,
                      "className": "col s12 m3 l3 top-margin-50",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Add Recipe",
                        "className": "waves-effect waves-light btn top-margin",
                        "replace": false,
                        "to": "/addrecipe",
                      },
                      "ref": null,
                      "rendered": "Add Recipe",
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "style": Object {
                    "borderTop": "1px solid #26a69a",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": "hr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Routes should render correctly 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(MyRecipesPage)
    deleteRecipe={[MockFunction]}
    getMyRecipes={[MockFunction]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    user={
      Object {
        "userId": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "deleteRecipe": [MockFunction],
      "getMyRecipes": [MockFunction],
      "myRecipes": [Function],
      "state": Object {
        "auth": Object {
          "user": Object {},
        },
        "recipes": Object {},
      },
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "user": Object {
        "userId": 1,
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "deleteRecipe": [MockFunction],
        "getMyRecipes": [MockFunction],
        "myRecipes": [Function],
        "state": Object {
          "auth": Object {
            "user": Object {},
          },
          "recipes": Object {},
        },
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "user": Object {
          "userId": 1,
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Routes should render correctly 3`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MyRecipesList
    deleteRecipe={[MockFunction]}
    getMyRecipes={
      [MockFunction] {
        "calls": Array [
          Array [
            1,
          ],
        ],
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    user={
      Object {
        "userId": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="center-align"
        >
          <MDSpinner
            color1="rgb(66, 165, 245)"
            color2="rgb(239, 83, 80)"
            color3="rgb(253, 216, 53)"
            color4="rgb(76, 175, 80)"
            duration={1333}
            size={40}
          />
        </div>,
        <div
          className="modal"
          id="delete"
        >
          <div
            className="modal-content"
          >
            <h5>
              Delete Recipe
            </h5>
            <p>
              Are you sure you want to delete this recipe?
            </p>
          </div>
          <div
            className="modal-footer"
          >
            <Link
              className="modal-action modal-close waves-effect waves-green btn-flat"
              data-id={null}
              onClick={[Function]}
              replace={false}
              to="!#"
            >
              Delete
            </Link>
            <Link
              className="modal-action modal-close waves-effect waves-green btn-flat"
              onClick={[Function]}
              replace={false}
              to="!#"
            >
              Cancil
            </Link>
          </div>
        </div>,
      ],
      "className": "row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <MDSpinner
            color1="rgb(66, 165, 245)"
            color2="rgb(239, 83, 80)"
            color3="rgb(253, 216, 53)"
            color4="rgb(76, 175, 80)"
            duration={1333}
            size={40}
          />,
          "className": "center-align",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "color1": "rgb(66, 165, 245)",
            "color2": "rgb(239, 83, 80)",
            "color3": "rgb(253, 216, 53)",
            "color4": "rgb(76, 175, 80)",
            "duration": 1333,
            "size": 40,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="modal-content"
            >
              <h5>
                Delete Recipe
              </h5>
              <p>
                Are you sure you want to delete this recipe?
              </p>
            </div>,
            <div
              className="modal-footer"
            >
              <Link
                className="modal-action modal-close waves-effect waves-green btn-flat"
                data-id={null}
                onClick={[Function]}
                replace={false}
                to="!#"
              >
                Delete
              </Link>
              <Link
                className="modal-action modal-close waves-effect waves-green btn-flat"
                onClick={[Function]}
                replace={false}
                to="!#"
              >
                Cancil
              </Link>
            </div>,
          ],
          "className": "modal",
          "id": "delete",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h5>
                  Delete Recipe
                </h5>,
                <p>
                  Are you sure you want to delete this recipe?
                </p>,
              ],
              "className": "modal-content",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Delete Recipe",
                },
                "ref": null,
                "rendered": "Delete Recipe",
                "type": "h5",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Are you sure you want to delete this recipe?",
                },
                "ref": null,
                "rendered": "Are you sure you want to delete this recipe?",
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  className="modal-action modal-close waves-effect waves-green btn-flat"
                  data-id={null}
                  onClick={[Function]}
                  replace={false}
                  to="!#"
                >
                  Delete
                </Link>,
                <Link
                  className="modal-action modal-close waves-effect waves-green btn-flat"
                  onClick={[Function]}
                  replace={false}
                  to="!#"
                >
                  Cancil
                </Link>,
              ],
              "className": "modal-footer",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Delete",
                  "className": "modal-action modal-close waves-effect waves-green btn-flat",
                  "data-id": null,
                  "onClick": [Function],
                  "replace": false,
                  "to": "!#",
                },
                "ref": null,
                "rendered": "Delete",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancil",
                  "className": "modal-action modal-close waves-effect waves-green btn-flat",
                  "onClick": [Function],
                  "replace": false,
                  "to": "!#",
                },
                "ref": null,
                "rendered": "Cancil",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="center-align"
          >
            <MDSpinner
              color1="rgb(66, 165, 245)"
              color2="rgb(239, 83, 80)"
              color3="rgb(253, 216, 53)"
              color4="rgb(76, 175, 80)"
              duration={1333}
              size={40}
            />
          </div>,
          <div
            className="modal"
            id="delete"
          >
            <div
              className="modal-content"
            >
              <h5>
                Delete Recipe
              </h5>
              <p>
                Are you sure you want to delete this recipe?
              </p>
            </div>
            <div
              className="modal-footer"
            >
              <Link
                className="modal-action modal-close waves-effect waves-green btn-flat"
                data-id={null}
                onClick={[Function]}
                replace={false}
                to="!#"
              >
                Delete
              </Link>
              <Link
                className="modal-action modal-close waves-effect waves-green btn-flat"
                onClick={[Function]}
                replace={false}
                to="!#"
              >
                Cancil
              </Link>
            </div>
          </div>,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <MDSpinner
              color1="rgb(66, 165, 245)"
              color2="rgb(239, 83, 80)"
              color3="rgb(253, 216, 53)"
              color4="rgb(76, 175, 80)"
              duration={1333}
              size={40}
            />,
            "className": "center-align",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "color1": "rgb(66, 165, 245)",
              "color2": "rgb(239, 83, 80)",
              "color3": "rgb(253, 216, 53)",
              "color4": "rgb(76, 175, 80)",
              "duration": 1333,
              "size": 40,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="modal-content"
              >
                <h5>
                  Delete Recipe
                </h5>
                <p>
                  Are you sure you want to delete this recipe?
                </p>
              </div>,
              <div
                className="modal-footer"
              >
                <Link
                  className="modal-action modal-close waves-effect waves-green btn-flat"
                  data-id={null}
                  onClick={[Function]}
                  replace={false}
                  to="!#"
                >
                  Delete
                </Link>
                <Link
                  className="modal-action modal-close waves-effect waves-green btn-flat"
                  onClick={[Function]}
                  replace={false}
                  to="!#"
                >
                  Cancil
                </Link>
              </div>,
            ],
            "className": "modal",
            "id": "delete",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h5>
                    Delete Recipe
                  </h5>,
                  <p>
                    Are you sure you want to delete this recipe?
                  </p>,
                ],
                "className": "modal-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Delete Recipe",
                  },
                  "ref": null,
                  "rendered": "Delete Recipe",
                  "type": "h5",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Are you sure you want to delete this recipe?",
                  },
                  "ref": null,
                  "rendered": "Are you sure you want to delete this recipe?",
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className="modal-action modal-close waves-effect waves-green btn-flat"
                    data-id={null}
                    onClick={[Function]}
                    replace={false}
                    to="!#"
                  >
                    Delete
                  </Link>,
                  <Link
                    className="modal-action modal-close waves-effect waves-green btn-flat"
                    onClick={[Function]}
                    replace={false}
                    to="!#"
                  >
                    Cancil
                  </Link>,
                ],
                "className": "modal-footer",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Delete",
                    "className": "modal-action modal-close waves-effect waves-green btn-flat",
                    "data-id": null,
                    "onClick": [Function],
                    "replace": false,
                    "to": "!#",
                  },
                  "ref": null,
                  "rendered": "Delete",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cancil",
                    "className": "modal-action modal-close waves-effect waves-green btn-flat",
                    "onClick": [Function],
                    "replace": false,
                    "to": "!#",
                  },
                  "ref": null,
                  "rendered": "Cancil",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Routes should render correctly 4`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(MyRecipesList)
    deleteRecipe={[MockFunction]}
    getMyRecipes={
      [MockFunction] {
        "calls": Array [
          Array [
            1,
          ],
        ],
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    user={
      Object {
        "userId": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "deleteRecipe": [Function],
      "error": undefined,
      "getMyRecipes": [Function],
      "loggedIn": undefined,
      "myRecipes": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "user": Object {},
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "deleteRecipe": [Function],
        "error": undefined,
        "getMyRecipes": [Function],
        "loggedIn": undefined,
        "myRecipes": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "user": Object {},
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
